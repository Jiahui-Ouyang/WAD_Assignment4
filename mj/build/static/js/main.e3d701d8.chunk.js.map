{"version":3,"sources":["Journal.js","Category.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","apps","length","initializeApp","apiKey","process","authDomain","databaseUrl","projectId","storageBucket","messagingSenderId","appId","firestore","categories","auth","id","name","Journal","useState","category","setCategory","useForm","register","handleSubmit","showForm","setShowForm","records","setRecords","total","setTotal","editMode","setEditMode","createdAt","Date","description","amount","tempData","setTempData","moneyRef","collection","query","orderBy","limitToLast","useCollectionData","idField","data","console","log","useEffect","t","r","map","d","i","JournalRow","onDeleteClick","handleDeleteClick","onEditClick","handleEditClick","handleCloseForm","onSubmit","a","preparedData","parseFloat","doc","set","then","catch","error","alert","add","window","confirm","delete","toDate","Container","Row","Col","options","getOptionLabel","x","getOptionValue","onChange","obj","filter","Table","striped","bordered","hover","variant","colSpan","Modal","show","onHide","aria-labelledby","centered","type","placeholder","ref","required","defaultValue","Header","closeButton","Title","Body","htmlFor","format","value","c","step","min","Footer","Button","onClick","props","CategoryManagement","defaultCategory","disabled","default","Home","App","Navbar","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Link","to","NavDropdown","title","Item","Divider","eventKey","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAiB6B,IAAzBA,IAASC,KAAKC,QAChBF,IAASG,cAAc,CACrBC,OAAQC,0CACRC,WAAYD,6CACZE,YAAaF,kEACbG,UAAWH,6BACXI,cAAeJ,yCACfK,kBAAmBL,eACnBM,MAAON,8CAGX,IAAMO,EAAYZ,IAASY,YAOrBC,GANOb,IAASc,OAMH,CACjB,CAAEC,GAAI,EAAGC,KAAM,aACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,OACf,CAAED,GAAI,EAAGC,KAAM,kBACf,CAAED,GAAI,EAAGC,KAAM,mBAGF,SAASC,IAAW,IAAD,EACAC,qBADA,mBACzBC,EADyB,KACfC,EADe,OAEGC,cAA3BC,EAFwB,EAExBA,SAAUC,EAFc,EAEdA,aAFc,EAGAL,oBAAS,GAHT,mBAGzBM,EAHyB,KAGfC,EAHe,OAIFP,mBAAS,IAJP,mBAIzBQ,EAJyB,KAIhBC,EAJgB,OAKNT,mBAAS,GALH,mBAKzBU,EALyB,KAKlBC,EALkB,OAMAX,oBAAS,GANT,mBAMzBY,EANyB,KAMfC,EANe,OAOAb,mBAAS,CACvCH,GAAI,KACJiB,UAAW,IAAIC,KACfC,YAAa,GACbC,OAAQ,EACRhB,SAAUN,EAAW,KAZS,mBAOzBuB,EAPyB,KAOfC,EAPe,KAgB1BC,EAAW1B,EAAU2B,WAAW,SAChCC,EAAQF,EAASG,QAAQ,YAAa,OAAOC,YAAY,KAjB/B,EAkBjBC,YAAkBH,EAAO,CAAEI,QAAS,OAA5CC,EAlByB,oBAoBhCC,QAAQC,IAAI,uBAAwB1C,8BAGpC2C,qBAAU,WACR,GAAIH,EAAM,CACR,IAAII,EAAI,EACJC,EAAIL,EAAKM,KAAI,SAACC,EAAGC,GAGnB,OADAJ,GAAKG,EAAEjB,OAEL,cAACmB,EAAD,CACET,KAAMO,EACNC,EAAGA,EACHE,cAAeC,EACfC,YAAaC,OAKnB/B,EAAWuB,GACXrB,EAASoB,MAGX,CAACJ,IAGH,IAwBMc,EAAkB,WACtBtB,EAAY,CACVtB,GAAI,KACJiB,UAAW,IAAIC,KACfC,YAAa,GACbC,OAAQ,EACRhB,SAAUN,EAAW,KAEvBO,EAAY,IACZK,GAAY,GACZM,GAAY,IAIR6B,EAAQ,uCAAG,WAAOf,GAAP,eAAAgB,EAAA,yDACXC,EAAe,CAEjB5B,YAAaW,EAAKX,YAClBC,OAAQ4B,WAAWlB,EAAKV,QACxBH,UAAW,IAAIC,KAAKY,EAAKb,WACzBb,SAAUA,GAEZ2B,QAAQC,IAAI,WAAYe,IAGpBhC,EAXW,uBAabgB,QAAQC,IAAI,eAAgBF,EAAK9B,IAbpB,SAcPuB,EAAS0B,IAAInB,EAAK9B,IACrBkD,IAAIH,GACJI,MAAK,kBAAMpB,QAAQC,IAAI,4BACvBoB,OAAM,SAACC,GACNtB,QAAQsB,MAAM,UAAWA,GACzBC,MAAMD,MAnBG,+CA2BP9B,EACHgC,IAAIR,GACJI,MAAK,kBAAMpB,QAAQC,IAAI,iCACvBoB,OAAM,SAACC,GACNtB,QAAQsB,MAAM,UAAWA,GACzBC,MAAMD,MAhCG,QAoCfT,IApCe,4CAAH,sDA6CRH,EAAoB,SAACzC,GACzB+B,QAAQC,IAAI,mCAAoChC,GAC3CwD,OAAOC,QAAQ,wCAChBlC,EAAS0B,IAAIjD,GAAI0D,UAGjBf,EAAkB,SAACb,GACvB,IAAIiB,EAAe,CACjB/C,GAAI8B,EAAK9B,GACTmB,YAAaW,EAAKX,YAClBC,OAAQ4B,WAAWlB,EAAKV,QACxBH,UAAWa,EAAKb,UAAU0C,SAC1BvD,SAAUA,GAEZ2B,QAAQC,IAAI,kBAAmBe,GAM/BzB,EAAYyB,GACZ1C,EAAYyB,EAAK1B,UACjBM,GAAY,GACZM,GAAY,IAId,OACE,eAAC4C,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,2CAEF,eAACA,EAAA,EAAD,uBAEE,cAAC,IAAD,CACEC,QAASjE,EACTkE,eAAgB,SAAAC,GAAC,OAAIA,EAAEhE,MACvBiE,eAAgB,SAAAD,GAAC,OAAIA,EAAEjE,IACvBmE,SA1HyB,SAACC,GAElC,GADArC,QAAQC,IAAI,SAAUoC,GAClBtC,EAAM,CACR,IAAII,EAAI,EAEJC,EADeL,EAAKuC,QAAO,SAAAhC,GAAC,OAAc,GAAV+B,EAAIpE,IAAWqC,EAAEjC,SAASJ,IAAMoE,EAAIpE,MACnDoC,KAAI,SAACC,EAAGC,GAG3B,OAFAP,QAAQC,IAAI,SAAUK,GACtBH,GAAKG,EAAEjB,OAEL,cAACmB,EAAD,CAAYT,KAAMO,EAAGC,EAAGA,OAK5B1B,EAAWuB,GACXrB,EAASoB,aAiHT,eAACoC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,QAAQ,OAAtC,UACE,gCACE,+BACE,sCACA,6CACA,0CACA,6CAGJ,gCACG/D,IAEH,kCACE,oBAAIgE,QAAS,EAAb,SACE,yCAAY9D,YAMlB,cAAC+D,EAAA,EAAD,CACEC,KAAMpE,EAAUqE,OAAQlC,EACxBmC,kBAAgB,gCAChBC,UAAQ,EAHV,SAKE,uBAAMnC,SAAUrC,EAAaqC,GAA7B,UACE,uBACEoC,KAAK,SACLC,YAAY,KACZC,IAAK5E,EAAS,CAAE6E,UAAU,IAC1BnF,KAAK,KACLD,GAAG,KACHqF,aAAchE,EAASrB,KAEzB,cAAC4E,EAAA,EAAMU,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACX,EAAA,EAAMY,MAAP,UACGzE,EAAW,cAAgB,qBAGhC,eAAC6D,EAAA,EAAMa,KAAP,WAEE,eAAC5B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,uBAAO4B,QAAQ,YAAf,oBAEF,cAAC5B,EAAA,EAAD,UACE,uBACEmB,KAAK,OACLC,YAAY,OACZC,IAAK5E,EAAS,CAAE6E,UAAU,IAC1BnF,KAAK,YACLD,GAAG,YACHqF,aAAcM,YAAOtE,EAASJ,UAAW,qBAM/C,eAAC4C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,uBAAO4B,QAAQ,WAAf,wBAEF,cAAC5B,EAAA,EAAD,UACE,cAAC,IAAD,CACE9D,GAAG,WACHC,KAAK,WACL2F,MAAOxF,EACP8E,YAAY,WACZnB,QAASjE,EAAWuE,QAAO,SAAAwB,GAAC,OAAY,GAARA,EAAE7F,MAClCmE,SAxHa,SAACC,GAC5BrC,QAAQC,IAAI,uBAAwBoC,GACpC/D,EAAY+D,IAuHEJ,eAAgB,SAAAC,GAAC,OAAIA,EAAEhE,MACvBiE,eAAgB,SAAAD,GAAC,OAAIA,EAAEjE,WAK7B,eAAC6D,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,uBAAO4B,QAAQ,cAAf,2BAEF,cAAC5B,EAAA,EAAD,UACE,uBACEmB,KAAK,OACLC,YAAY,cACZC,IAAK5E,EAAS,CAAE6E,UAAU,IAC1BnF,KAAK,cACLD,GAAG,cACHqF,aAAchE,EAASF,mBAI7B,eAAC0C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,uBAAO4B,QAAQ,SAAf,sBAEF,cAAC5B,EAAA,EAAD,UACE,uBACEmB,KAAK,SACLa,KAAK,MACLC,IAAI,IACJb,YAAY,SACZC,IAAK5E,EAAS,CAAE6E,UAAU,IAC1BnF,KAAK,SACLD,GAAG,SACHqF,aAAchE,EAASD,iBAK/B,eAACwD,EAAA,EAAMoB,OAAP,WACE,cAACC,EAAA,EAAD,CAAQvB,QAAQ,YAAYwB,QAAStD,EAArC,mBAGA,cAACqD,EAAA,EAAD,CAAQvB,QAAS3D,EAAW,UAAY,UAAWkE,KAAK,SAAxD,SACGlE,EAAW,cAAgB,0BAS1C,SAASwB,EAAW4D,GAClB,IAAI9D,EAAI8D,EAAMrE,KACNqE,EAAM7D,EAEd,OACE,+BACE,6BAAKqD,YAAOtD,EAAEpB,UAAU0C,SAAU,gBAClC,6BAAKtB,EAAElB,cACP,6BAAKkB,EAAEjC,SAASH,OAChB,6BAAKoC,EAAEjB,Y,YC5UgB,IAAzBnC,IAASC,KAAKC,QAChBF,IAASG,cAAc,CACrBC,OAAQC,0CACRC,WAAYD,6CACZE,YAAaF,kEACbG,UAAWH,6BACXI,cAAeJ,yCACfK,kBAAmBL,eACnBM,MAAON,8CAGX,IAAMO,EAAYZ,IAASY,YAOrBC,GANOb,IAASc,OAMH,CACjB,CAAEC,GAAI,EAAGC,KAAM,aACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,OACf,CAAED,GAAI,EAAGC,KAAM,oBAGF,SAASmG,IAAsB,IAAD,EACXjG,qBADW,mBACpCC,EADoC,KAC1BC,EAD0B,OAERC,cAA3BC,EAFmC,EAEnCA,SAAUC,EAFyB,EAEzBA,aAFyB,EAGXL,oBAAS,GAHE,mBAGpCM,EAHoC,KAG1BC,EAH0B,OAIbP,mBAAS,IAJI,mBAIpCQ,EAJoC,KAI3BC,EAJ2B,OAKjBT,mBAAS,GALQ,mBAKpCU,EALoC,KAK7BC,EAL6B,OAMXX,oBAAS,GANE,mBAMpCY,EANoC,KAM1BC,EAN0B,OASXb,mBAAS,CACvCH,GAAI,KACJiB,UAAW,IAAIC,KACfC,YAAa,GACbC,OAAQ,EACRhB,SAAU,gBACViG,gBAAiB,kBAfwB,mBASpChF,EAToC,KAS1BC,EAT0B,KAmBrCC,EAAW1B,EAAU2B,WAAW,SAChCC,EAAQF,EAASG,QAAQ,YAAa,OAAOC,YAAY,KApBpB,EAqB5BC,YAAkBH,EAAO,CAAEI,QAAS,OAA5CC,EArBoC,oBAuB3CC,QAAQC,IAAI,uBAAwB1C,8BAGpC2C,qBAAU,WACR,GAAIH,EAAM,CACR,IAAII,EAAI,EACJC,EAAIL,EAAKM,KAAI,SAACC,EAAGC,GAGnB,OADAJ,GAAKG,EAAEjB,OAEL,cAAC,EAAD,CACEU,KAAMO,EACNC,EAAGA,EACHE,cAAeC,EACfC,YAAaC,OAKnB/B,EAAWuB,GACXrB,EAASoB,MAGX,CAACJ,IAGH,IAwBMc,EAAkB,WACtBtB,EAAY,CACVtB,GAAI,KACJiB,UAAW,IAAIC,KACfC,YAAa,GACbC,OAAQ,EACRhB,SAAU,gBACViG,gBAAiB,kBAEnBhG,EAAY,IACZK,GAAY,GACZM,GAAY,IAIR6B,EAAQ,uCAAG,WAAOf,GAAP,eAAAgB,EAAA,yDACXC,EAAe,CAEjB5B,YAAaW,EAAKX,YAClBC,OAAQ4B,WAAWlB,EAAKV,QACxBH,UAAW,IAAIC,KAAKY,EAAKb,WACzBb,SAAU,gBACViG,gBAAiB,iBAEnBtE,QAAQC,IAAI,WAAYe,IAGpBhC,EAZW,uBAcbgB,QAAQC,IAAI,eAAgBF,EAAK9B,IAdpB,SAePuB,EAAS0B,IAAInB,EAAK9B,IACrBkD,IAAIH,GACJI,MAAK,kBAAMpB,QAAQC,IAAI,4BACvBoB,OAAM,SAACC,GACNtB,QAAQsB,MAAM,UAAWA,GACzBC,MAAMD,MApBG,+CA4BP9B,EACHgC,IAAIR,GACJI,MAAK,kBAAMpB,QAAQC,IAAI,iCACvBoB,OAAM,SAACC,GACNtB,QAAQsB,MAAM,UAAWA,GACzBC,MAAMD,MAjCG,QAqCfT,IArCe,4CAAH,sDA8CRH,EAAoB,SAACzC,GACzB+B,QAAQC,IAAIF,EAAKuE,gBAAgB,mCAAoCrG,GAChEwD,OAAOC,QAAQ,wCAClBlC,EAAS0B,IAAIjD,GAAI0D,UAGff,EAAkB,SAACb,GACvB,IAAIiB,EAAe,CACjB/C,GAAI8B,EAAK9B,GACTmB,YAAaW,EAAKX,YAClBC,OAAQ4B,WAAWlB,EAAKV,QACxBH,UAAWa,EAAKb,UAAU0C,SAC1BvD,SAAUA,GAEZ2B,QAAQC,IAAI,kBAAmBe,GAM/BzB,EAAYyB,GACZ1C,EAAYyB,EAAK1B,UACjBM,GAAY,GACZM,GAAY,IAId,OACE,eAAC4C,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,qDACA,eAACmC,EAAA,EAAD,CAAQvB,QAAQ,eAAewB,QAhGhB,kBAAMxF,GAAY,IAgGjC,UACE,cAAC,IAAD,IADF,aAIF,eAACoD,EAAA,EAAD,uBAEE,cAAC,IAAD,CACEC,QAASjE,EACTkE,eAAgB,SAAAC,GAAC,OAAIA,EAAEhE,MACvBiE,eAAgB,SAAAD,GAAC,OAAIA,EAAEjE,IACvBmE,SA/HyB,SAACC,GAElC,GADArC,QAAQC,IAAI,SAAUoC,GAClBtC,EAAM,CACR,IAAII,EAAI,EAEJC,EADeL,EAAKuC,QAAO,SAAAhC,GAAC,OAAc,GAAV+B,EAAIpE,IAAWqC,EAAEjC,SAASJ,IAAMoE,EAAIpE,MACnDoC,KAAI,SAACC,EAAGC,GAG3B,OAFAP,QAAQC,IAAI,SAAUK,GACtBH,GAAKG,EAAEjB,OAEL,cAAC,EAAD,CAAYU,KAAMO,EAAGC,EAAGA,OAK5B1B,EAAWuB,GACXrB,EAASoB,aAsHT,eAACoC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,QAAQ,OAAtC,UACE,gCACE,+BACE,mCACA,sCACA,6CACA,0CACA,6CAGJ,gCACG/D,IAEH,kCACE,oBAAIgE,QAAS,EAAb,SACE,yCAAY9D,YAMlB,cAAC+D,EAAA,EAAD,CACEC,KAAMpE,EAAUqE,OAAQlC,EACxBmC,kBAAgB,gCAChBC,UAAQ,EAHV,SAKE,uBAAMnC,SAAUrC,EAAaqC,GAA7B,UACE,uBACEoC,KAAK,SACLC,YAAY,KACZC,IAAK5E,EAAS,CAAE6E,UAAU,IAC1BnF,KAAK,KACLD,GAAG,KACHqF,aAAchE,EAASrB,KAEzB,cAAC4E,EAAA,EAAMU,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACX,EAAA,EAAMY,MAAP,UACGzE,EAAW,cAAgB,qBAGhC,eAAC6D,EAAA,EAAMa,KAAP,WAEE,eAAC5B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,uBAAO4B,QAAQ,YAAf,oBAEF,cAAC5B,EAAA,EAAD,UACE,uBACEmB,KAAK,OACLC,YAAY,OACZC,IAAK5E,EAAS,CAAE6E,UAAU,IAC1BnF,KAAK,YACLD,GAAG,YACHqF,aAAcM,YAAOtE,EAASJ,UAAW,qBAM/C,eAAC4C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,uBAAO4B,QAAQ,WAAf,wBAEF,cAAC5B,EAAA,EAAD,UACE,cAAC,IAAD,CACE9D,GAAG,WACHC,KAAK,WACL2F,MAAOxF,EACP8E,YAAY,WACZnB,QAASjE,EAAWuE,QAAO,SAAAwB,GAAC,OAAY,GAARA,EAAE7F,MAClCmE,SA5Ha,SAACC,GAC5BrC,QAAQC,IAAI,uBAAwBoC,GACpC/D,EAAY+D,IA2HEJ,eAAgB,SAAAC,GAAC,OAAIA,EAAEhE,MACvBiE,eAAgB,SAAAD,GAAC,OAAIA,EAAEjE,WAK7B,eAAC6D,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,uBAAO4B,QAAQ,kBAAf,iCAEF,cAAC5B,EAAA,EAAD,UACE,uBACE9D,GAAG,kBACHC,KAAK,kBACL2F,MAAM,eACNU,UAAQ,EACRpB,YAAY,aAMlB,eAACrB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,uBAAO4B,QAAQ,cAAf,2BAEF,cAAC5B,EAAA,EAAD,UACE,uBACEmB,KAAK,OACLC,YAAY,cACZC,IAAK5E,EAAS,CAAE6E,UAAU,IAC1BnF,KAAK,cACLD,GAAG,cACHqF,aAAchE,EAASF,mBAI7B,eAAC0C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,uBAAO4B,QAAQ,SAAf,sBAEF,cAAC5B,EAAA,EAAD,UACE,uBACEmB,KAAK,SACLa,KAAK,MACLC,IAAI,IACJb,YAAY,SACZC,IAAK5E,EAAS,CAAE6E,UAAU,IAC1BnF,KAAK,SACLD,GAAG,SACHqF,aAAchE,EAASD,iBAK/B,eAACwD,EAAA,EAAMoB,OAAP,WACE,cAACC,EAAA,EAAD,CAAQvB,QAAQ,YAAYwB,QAAStD,EAArC,mBAGA,cAACqD,EAAA,EAAD,CAAQvB,QAAS3D,EAAW,UAAY,UAAWkE,KAAK,SAAxD,SACGlE,EAAW,cAAgB,0BAS1C,SAASwB,EAAW4D,GAClB,IAAI9D,EAAI8D,EAAMrE,KACNqE,EAAM7D,EAEd,OACE,+BACE,+BACE,cAAC,IAAD,CAAS4D,QAAS,kBAAMC,EAAM3D,cAAcH,EAAErC,OAC9C,cAAC,IAAD,CAAUkG,QAAS,kBAAMC,EAAMzD,YAAYL,MAC1CA,EAAEkE,WAEL,6BAAKZ,YAAOtD,EAAEpB,UAAU0C,SAAU,gBAClC,6BAAKtB,EAAElB,cACP,6BAAKkB,EAAEjC,SAASH,OAChB,6BAAKoC,EAAEjB,YCxTb,SAASoF,IACP,OACE,sCAGWC,MA1Df,WACE,OACE,eAAC,IAAD,WACE,eAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOnC,QAAQ,OAAvD,UACE,cAACgC,EAAA,EAAOI,MAAR,CAAcC,KAAK,IAAnB,2BACA,cAACL,EAAA,EAAOM,OAAR,CAAeC,gBAAc,0BAC7B,eAACP,EAAA,EAAOQ,SAAR,CAAiBlH,GAAG,wBAApB,UACE,eAACmH,EAAA,EAAD,CAAKC,UAAU,UAAf,UACE,cAACD,EAAA,EAAIE,KAAL,UACE,cAAC,IAAD,CAAMC,GAAG,WAAT,uBAIF,cAACH,EAAA,EAAIE,KAAL,UACE,cAAC,IAAD,CAAMC,GAAG,YAAT,wBAIF,eAACC,EAAA,EAAD,CAAaC,MAAM,WAAWxH,GAAG,0BAAjC,UACE,cAACuH,EAAA,EAAYE,KAAb,CAAkBV,KAAK,cAAvB,oBACA,cAACQ,EAAA,EAAYE,KAAb,CAAkBV,KAAK,cAAvB,4BACA,cAACQ,EAAA,EAAYE,KAAb,CAAkBV,KAAK,cAAvB,uBACA,cAACQ,EAAA,EAAYG,QAAb,IACA,cAACH,EAAA,EAAYE,KAAb,CAAkBV,KAAK,cAAvB,kCAGJ,cAACI,EAAA,EAAD,UACE,cAACA,EAAA,EAAIE,KAAL,CAAUM,SAAU,EAAGZ,KAAK,SAA5B,8BAON,eAAC,IAAD,WACE,cAAC,IAAD,CAAOa,KAAK,WAAZ,SACE,cAAC1H,EAAD,MAEF,cAAC,IAAD,CAAO0H,KAAK,YAAZ,SACE,cAACxB,EAAD,MAEF,cAAC,IAAD,CAAOwB,KAAK,IAAZ,SACE,cAACpB,EAAD,aC3CKqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5E,MAAK,YAAkD,IAA/C6E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e3d701d8.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport { Button, Modal } from 'react-bootstrap'\nimport Container from 'react-bootstrap/Container'\nimport Table from 'react-bootstrap/Table'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Select from 'react-select'\nimport { format } from 'date-fns'\nimport { BsPlus, BsTrash, BsPencil } from \"react-icons/bs\";\nimport { useForm } from \"react-hook-form\"\n\n// Firebase\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp({\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseUrl: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n  })\n}\nconst firestore = firebase.firestore()\nconst auth = firebase.auth()\n\n\n// const data = require('./sampleData.json')\n\n// Add new category 'Uncategorised' in order to delete\nconst categories = [\n  { id: 0, name: '-- All --' },\n  { id: 1, name: 'Food' },\n  { id: 2, name: 'Fun' },\n  { id: 3, name: 'Transportation' },\n  { id: 4, name: 'Uncategorised' }\n]\n\nexport default function Journal() {\n  const [category, setCategory] = useState()\n  const { register, handleSubmit } = useForm()\n  const [showForm, setShowForm] = useState(false)\n  const [records, setRecords] = useState([])\n  const [total, setTotal] = useState(0)\n  const [editMode, setEditMode] = useState(false)\n  const [tempData, setTempData] = useState({\n    id: null,\n    createdAt: new Date(),\n    description: '',\n    amount: 0,\n    category: categories[0]\n  })\n\n  // Firebase stuff\n  const moneyRef = firestore.collection('money');\n  const query = moneyRef.orderBy('createdAt', 'asc').limitToLast(100);\n  const [data] = useCollectionData(query, { idField: 'id' });\n\n  console.log(\"REACT_APP_PROJECT_ID\", process.env.REACT_APP_PROJECT_ID)\n\n  // This will be run when 'data' is changed.\n  useEffect(() => {\n    if (data) { // Guard condition\n      let t = 0\n      let r = data.map((d, i) => {\n        // console.log('useEffect', format(d.createdAt.toDate(), \"yyyy-MM-dd\"))\n        t += d.amount\n        return (\n          <JournalRow\n            data={d}\n            i={i}\n            onDeleteClick={handleDeleteClick}\n            onEditClick={handleEditClick}\n          />\n        )\n      })\n\n      setRecords(r)\n      setTotal(t)\n    }\n  },\n    [data])\n\n\n  const handleCategoryFilterChange = (obj) => {\n    console.log('filter', obj)\n    if (data) { // Guard condition      \n      let t = 0\n      let filteredData = data.filter(d => obj.id == 0 || d.category.id == obj.id)\n      let r = filteredData.map((d, i) => {\n        console.log('filter', d)\n        t += d.amount\n        return (\n          <JournalRow data={d} i={i} />\n\n        )\n\n      })\n      setRecords(r)\n      setTotal(t)\n    }\n  }\n\n\n  // Handlers for Modal Add Form\n  const handleshowForm = () => setShowForm(true)\n\n  // Handlers for Modal Add Form\n  const handleCloseForm = () => {\n    setTempData({\n      id: null,\n      createdAt: new Date(),\n      description: '',\n      amount: 0,\n      category: categories[0]\n    })\n    setCategory({})\n    setShowForm(false)\n    setEditMode(false)\n  }\n\n  // Handle Add Form submit\n  const onSubmit = async (data) => {\n    let preparedData = {\n      // ...data,\n      description: data.description,\n      amount: parseFloat(data.amount),\n      createdAt: new Date(data.createdAt),\n      category: category\n    }\n    console.log('onSubmit', preparedData)\n\n\n    if (editMode) {\n      // Update record\n      console.log(\"UPDATING!!!!\", data.id)\n      await moneyRef.doc(data.id)\n        .set(preparedData)\n        .then(() => console.log(\"moneyRef has been set\"))\n        .catch((error) => {\n          console.error(\"Error: \", error);\n          alert(error)\n        });\n    } else {\n      // Add to firebase\n      // This is asynchronous operation, \n      // JS will continue process later, so we can set \"callback\" function\n      // so the callback functions will be called when firebase finishes.\n      // Usually, the function is called \"then / error / catch\".\n      await moneyRef\n        .add(preparedData)\n        .then(() => console.log(\"New record has been added.\"))\n        .catch((error) => {\n          console.error(\"Errror:\", error)\n          alert(error)\n        })\n      // setShowForm(false)\n    }\n    handleCloseForm()\n  }\n\n  const handleCategoryChange = (obj) => {\n    console.log('handleCategoryChange', obj)\n    setCategory(obj)\n  }\n\n  // Delete only the kind of data which belongs to Uncategorised\n  const handleDeleteClick = (id) => {\n    console.log('handleDeleteClick in Journal id:', id)\n    if ((window.confirm(\"Are you sure to delete this record?\")))\n        moneyRef.doc(id).delete()\n  }\n\n  const handleEditClick = (data) => {\n    let preparedData = {\n      id: data.id,\n      description: data.description,\n      amount: parseFloat(data.amount),\n      createdAt: data.createdAt.toDate(),\n      category: category\n    }\n    console.log(\"handleEditClick\", preparedData)\n    // expect original data type for data.createdAt is Firebase's timestamp\n    // convert to JS Date object and put it to the same field\n    // if ('toDate' in data.createdAt) // guard, check wther toDate() is available in createdAt object.\n    //   data.createdAt = data.createdAt.toDate()\n\n    setTempData(preparedData)\n    setCategory(data.category)\n    setShowForm(true)\n    setEditMode(true)\n  }\n\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1>Journal</h1>\n        </Col>\n        <Col>\n          Category:\n          <Select\n            options={categories}\n            getOptionLabel={x => x.name}\n            getOptionValue={x => x.id}\n            onChange={handleCategoryFilterChange}\n          />\n        </Col>\n\n      </Row>\n\n      <Table striped bordered hover variant=\"dark\">\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Description</th>\n            <th>Category</th>\n            <th>Amount</th>\n          </tr>\n        </thead>\n        <tbody>\n          {records}\n        </tbody>\n        <tfooter>\n          <td colSpan={5}>\n            <h2>Total: {total}</h2>\n          </td>\n        </tfooter>\n      </Table>\n\n\n      <Modal\n        show={showForm} onHide={handleCloseForm}\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <input\n            type=\"hidden\"\n            placeholder=\"ID\"\n            ref={register({ required: false })}\n            name=\"id\"\n            id=\"id\"\n            defaultValue={tempData.id}\n          />\n          <Modal.Header closeButton>\n            <Modal.Title>\n              {editMode ? \"Edit Record\" : \"Add New Record\"}\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <Row>\n              <Col>\n                <label htmlFor=\"createdAt\">Date</label>\n              </Col>\n              <Col>\n                <input\n                  type=\"date\"\n                  placeholder=\"Date\"\n                  ref={register({ required: true })}\n                  name=\"createdAt\"\n                  id=\"createdAt\"\n                  defaultValue={format(tempData.createdAt, \"yyyy-MM-dd\")}\n                />\n\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <label htmlFor=\"category\">Category</label>\n              </Col>\n              <Col>\n                <Select\n                  id=\"category\"\n                  name=\"category\"\n                  value={category}\n                  placeholder=\"Category\"\n                  options={categories.filter(c => c.id != 0)}\n                  onChange={handleCategoryChange}\n                  getOptionLabel={x => x.name}\n                  getOptionValue={x => x.id}\n                />\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <label htmlFor=\"description\">Description</label>\n              </Col>\n              <Col>\n                <input\n                  type=\"text\"\n                  placeholder=\"Description\"\n                  ref={register({ required: true })}\n                  name=\"description\"\n                  id=\"description\"\n                  defaultValue={tempData.description}\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <label htmlFor=\"amount\">Amount</label>\n              </Col>\n              <Col>\n                <input\n                  type=\"number\"\n                  step=\"any\"\n                  min=\"0\"\n                  placeholder=\"Amount\"\n                  ref={register({ required: true })}\n                  name=\"amount\"\n                  id=\"amount\"\n                  defaultValue={tempData.amount}\n                />\n              </Col>\n            </Row>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleCloseForm}>\n              Close\n          </Button>\n            <Button variant={editMode ? \"success\" : \"primary\"} type=\"submit\">\n              {editMode ? \"Save Record\" : \"Add Record\"}\n            </Button>\n          </Modal.Footer>\n        </form>\n      </Modal>\n    </Container>\n  )\n}\n\nfunction JournalRow(props) {\n  let d = props.data\n  let i = props.i\n  // console.log(\"JournalRow\", d)\n  return (\n    <tr>\n      <td>{format(d.createdAt.toDate(), \"yyyy-MM-dd\")}</td>\n      <td>{d.description}</td>\n      <td>{d.category.name}</td>\n      <td>{d.amount}</td>\n    </tr>\n  )\n}","import { useState, useEffect } from 'react'\nimport { Button, Modal } from 'react-bootstrap'\nimport Container from 'react-bootstrap/Container'\nimport Table from 'react-bootstrap/Table'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Select from 'react-select'\nimport { format } from 'date-fns'\nimport { BsPlus, BsTrash, BsPencil } from \"react-icons/bs\";\nimport { useForm } from \"react-hook-form\"\n\n// Firebase\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp({\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseUrl: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n  })\n}\nconst firestore = firebase.firestore()\nconst auth = firebase.auth()\n\n\n// const data = require('./sampleData.json')\n\n\nconst categories = [\n  { id: 0, name: '-- All --' },\n  { id: 1, name: 'Food' },\n  { id: 2, name: 'Fun' },\n  { id: 3, name: 'Transportation' }\n]\n\nexport default function CategoryManagement() {\n  const [category, setCategory] = useState()\n  const { register, handleSubmit } = useForm()\n  const [showForm, setShowForm] = useState(false)\n  const [records, setRecords] = useState([])\n  const [total, setTotal] = useState(0)\n  const [editMode, setEditMode] = useState(false)\n\n  //The default category of the app is uncategorised\n  const [tempData, setTempData] = useState({\n    id: null,\n    createdAt: new Date(),\n    description: '',\n    amount: 0,\n    category: \"Uncategorised\",\n    defaultCategory: \"Uncategoriesd\"\n  })\n\n  // Firebase stuff\n  const moneyRef = firestore.collection('money');\n  const query = moneyRef.orderBy('createdAt', 'asc').limitToLast(100);\n  const [data] = useCollectionData(query, { idField: 'id' });\n\n  console.log(\"REACT_APP_PROJECT_ID\", process.env.REACT_APP_PROJECT_ID)\n\n  // This will be run when 'data' is changed.\n  useEffect(() => {\n    if (data) { // Guard condition\n      let t = 0\n      let r = data.map((d, i) => {\n        // console.log('useEffect', format(d.createdAt.toDate(), \"yyyy-MM-dd\"))\n        t += d.amount\n        return (\n          <JournalRow\n            data={d}\n            i={i}\n            onDeleteClick={handleDeleteClick}\n            onEditClick={handleEditClick}\n          />\n        )\n      })\n\n      setRecords(r)\n      setTotal(t)\n    }\n  },\n    [data])\n\n\n  const handleCategoryFilterChange = (obj) => {\n    console.log('filter', obj)\n    if (data) { // Guard condition      \n      let t = 0\n      let filteredData = data.filter(d => obj.id == 0 || d.category.id == obj.id)\n      let r = filteredData.map((d, i) => {\n        console.log('filter', d)\n        t += d.amount\n        return (\n          <JournalRow data={d} i={i} />\n\n        )\n\n      })\n      setRecords(r)\n      setTotal(t)\n    }\n  }\n\n\n  // Handlers for Modal Add Form\n  const handleshowForm = () => setShowForm(true)\n\n  // Handlers for Modal Add Form\n  const handleCloseForm = () => {\n    setTempData({\n      id: null,\n      createdAt: new Date(),\n      description: '',\n      amount: 0,\n      category: \"Uncategorised\",\n      defaultCategory: \"Uncategoriesd\"\n    })\n    setCategory({})\n    setShowForm(false)\n    setEditMode(false)\n  }\n\n  // Handle Add Form submit\n  const onSubmit = async (data) => {\n    let preparedData = {\n      // ...data,\n      description: data.description,\n      amount: parseFloat(data.amount),\n      createdAt: new Date(data.createdAt),\n      category: \"Uncategorised\",\n      defaultCategory: \"Uncategoriesd\"\n    }\n    console.log('onSubmit', preparedData)\n\n\n    if (editMode) {\n      // Update record\n      console.log(\"UPDATING!!!!\", data.id)\n      await moneyRef.doc(data.id)\n        .set(preparedData)\n        .then(() => console.log(\"moneyRef has been set\"))\n        .catch((error) => {\n          console.error(\"Error: \", error);\n          alert(error)\n        });\n    } else {\n      // Add to firebase\n      // This is asynchronous operation, \n      // JS will continue process later, so we can set \"callback\" function\n      // so the callback functions will be called when firebase finishes.\n      // Usually, the function is called \"then / error / catch\".\n      await moneyRef\n        .add(preparedData)\n        .then(() => console.log(\"New record has been added.\"))\n        .catch((error) => {\n          console.error(\"Errror:\", error)\n          alert(error)\n        })\n      // setShowForm(false)\n    }\n    handleCloseForm()\n  }\n\n  const handleCategoryChange = (obj) => {\n    console.log('handleCategoryChange', obj)\n    setCategory(obj)\n  }\n\n  // Delete only the kind of data which belongs to Uncategorised\n  const handleDeleteClick = (id) => {\n    console.log(data.defaultCategory,'handleDeleteClick in Journal id:', id)\n    if ((window.confirm(\"Are you sure to delete this record?\")))\n      moneyRef.doc(id).delete()\n  }\n\n  const handleEditClick = (data) => {\n    let preparedData = {\n      id: data.id,\n      description: data.description,\n      amount: parseFloat(data.amount),\n      createdAt: data.createdAt.toDate(),\n      category: category\n    }\n    console.log(\"handleEditClick\", preparedData)\n    // expect original data type for data.createdAt is Firebase's timestamp\n    // convert to JS Date object and put it to the same field\n    // if ('toDate' in data.createdAt) // guard, check wther toDate() is available in createdAt object.\n    //   data.createdAt = data.createdAt.toDate()\n\n    setTempData(preparedData)\n    setCategory(data.category)\n    setShowForm(true)\n    setEditMode(true)\n  }\n\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1>Category Management</h1>\n          <Button variant=\"outline-dark\" onClick={handleshowForm}>\n            <BsPlus /> Add\n      </Button>\n        </Col>\n        <Col>\n          Category:\n          <Select\n            options={categories}\n            getOptionLabel={x => x.name}\n            getOptionValue={x => x.id}\n            onChange={handleCategoryFilterChange}\n          />\n        </Col>\n\n      </Row>\n\n      <Table striped bordered hover variant=\"dark\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Date</th>\n            <th>Description</th>\n            <th>Category</th>\n            <th>Amount</th>\n          </tr>\n        </thead>\n        <tbody>\n          {records}\n        </tbody>\n        <tfooter>\n          <td colSpan={5}>\n            <h2>Total: {total}</h2>\n          </td>\n        </tfooter>\n      </Table>\n\n\n      <Modal\n        show={showForm} onHide={handleCloseForm}\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <input\n            type=\"hidden\"\n            placeholder=\"ID\"\n            ref={register({ required: false })}\n            name=\"id\"\n            id=\"id\"\n            defaultValue={tempData.id}\n          />\n          <Modal.Header closeButton>\n            <Modal.Title>\n              {editMode ? \"Edit Record\" : \"Add New Record\"}\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <Row>\n              <Col>\n                <label htmlFor=\"createdAt\">Date</label>\n              </Col>\n              <Col>\n                <input\n                  type=\"date\"\n                  placeholder=\"Date\"\n                  ref={register({ required: true })}\n                  name=\"createdAt\"\n                  id=\"createdAt\"\n                  defaultValue={format(tempData.createdAt, \"yyyy-MM-dd\")}\n                />\n\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <label htmlFor=\"category\">Category</label>\n              </Col>\n              <Col>\n                <Select\n                  id=\"category\"\n                  name=\"category\"\n                  value={category}\n                  placeholder=\"Category\"\n                  options={categories.filter(c => c.id != 0)}\n                  onChange={handleCategoryChange}\n                  getOptionLabel={x => x.name}\n                  getOptionValue={x => x.id}\n                />\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <label htmlFor=\"defaultCategory\">DefaultCategory: </label>\n              </Col>\n              <Col>\n                <input\n                  id=\"defaultCategory\"\n                  name=\"defaultCategory\"\n                  value=\"Uncategoried\"\n                  disabled\n                  placeholder=\"123\"\n                  \n                />\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <label htmlFor=\"description\">Description</label>\n              </Col>\n              <Col>\n                <input\n                  type=\"text\"\n                  placeholder=\"Description\"\n                  ref={register({ required: true })}\n                  name=\"description\"\n                  id=\"description\"\n                  defaultValue={tempData.description}\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <label htmlFor=\"amount\">Amount</label>\n              </Col>\n              <Col>\n                <input\n                  type=\"number\"\n                  step=\"any\"\n                  min=\"0\"\n                  placeholder=\"Amount\"\n                  ref={register({ required: true })}\n                  name=\"amount\"\n                  id=\"amount\"\n                  defaultValue={tempData.amount}\n                />\n              </Col>\n            </Row>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleCloseForm}>\n              Close\n          </Button>\n            <Button variant={editMode ? \"success\" : \"primary\"} type=\"submit\">\n              {editMode ? \"Save Record\" : \"Add Record\"}\n            </Button>\n          </Modal.Footer>\n        </form>\n      </Modal>\n    </Container>\n  )\n}\n\nfunction JournalRow(props) {\n  let d = props.data\n  let i = props.i\n  // console.log(\"JournalRow\", d)\n  return (\n    <tr>\n      <td>\n        <BsTrash onClick={() => props.onDeleteClick(d.id)} />\n        <BsPencil onClick={() => props.onEditClick(d)} />\n        {d.default}\n      </td>\n      <td>{format(d.createdAt.toDate(), \"yyyy-MM-dd\")}</td>\n      <td>{d.description}</td>\n      <td>{d.category.name}</td>\n      <td>{d.amount}</td>\n    </tr>\n  )\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  Navbar, Nav, NavDropdown,\n} from 'react-bootstrap';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport Journal from './Journal'\nimport CategoryManagement from './Category'\nfunction App() {\n  return (\n    <Router>\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"/\">Money Journey</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link>\n              <Link to=\"/journal\">\n                Journal\n              </Link>\n            </Nav.Link>\n            <Nav.Link >\n              <Link to=\"/category\">\n                Category\n                </Link>\n              </Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider /> \n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n          <Nav>\n            <Nav.Link eventKey={2} href=\"#memes\">\n              Sign Out\n      </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Switch>\n        <Route path=\"/journal\">\n          <Journal />\n        </Route>\n        <Route path=\"/category\">\n          <CategoryManagement />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\n\n\n\n\nfunction Home() {\n  return (\n    <h1>Home</h1>\n  )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}